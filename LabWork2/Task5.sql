CREATE OR REPLACE PROCEDURE RESTORE_STUDENTS_BY_TIMESTAMP(S_TIME_STAMP IN TIMESTAMP)
AS
BEGIN
    FOR STUDENT_RECORD IN(
    SELECT *
    FROM STUDENTS_AUDIT
    WHERE ACTION_DATE > S_TIME_STAMP
    ORDER BY ACTION_DATE DESC
    ) LOOP
        IF STUDENT_RECORD.ACTION = 'INSERT' THEN
            DELETE FROM STUDENTS WHERE ID = STUDENT_RECORD.STUDENT_ID;
            
        ELSIF STUDENT_RECORD.ACTION = 'UPDATE' THEN
            UPDATE STUDENTS
                SET ID = SUBSTR(STUDENT_RECORD.OLD_DATA, 1, INSTR(STUDENT_RECORD.OLD_DATA, ',') - 1),
                NAME = SUBSTR(STUDENT_RECORD.OLD_DATA, INSTR(STUDENT_RECORD.OLD_DATA, ',') + 1, INSTR(STUDENT_RECORD.OLD_DATA, ',', 1, 2) - INSTR(STUDENT_RECORD.OLD_DATA, ',') - 1),
                GROUP_ID = SUBSTR(STUDENT_RECORD.OLD_DATA, INSTR(STUDENT_RECORD.OLD_DATA, ',', 1, 2) + 1)
                WHERE ID = STUDENT_RECORD.STUDENT_ID;
            
        ELSIF STUDENT_RECORD.ACTION = 'DELETE' THEN
            INSERT INTO STUDENTS (ID, NAME, GROUP_ID)
            VALUES (SUBSTR(STUDENT_RECORD.OLD_DATA, 1, INSTR(STUDENT_RECORD.OLD_DATA, ',') - 1),
                    SUBSTR(STUDENT_RECORD.OLD_DATA, INSTR(STUDENT_RECORD.OLD_DATA, ',') + 1, INSTR(STUDENT_RECORD.OLD_DATA, ',', 1, 2) - INSTR(STUDENT_RECORD.OLD_DATA, ',') - 1),
                    SUBSTR(STUDENT_RECORD.OLD_DATA, INSTR(STUDENT_RECORD.OLD_DATA, ',', 1, 2) + 1));
        END IF;
    END LOOP;
        
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR OCCURED WHILE RESTORING STUDENTS TABLE BY TIMESTAMP: ' || SQLERRM);
END;


CREATE OR REPLACE PROCEDURE ROLLBACK_STUDENTS_BY_MINUTES(
    S_MINUTES IN NUMBER
) AS
    S_TIMESTAMP TIMESTAMP;
BEGIN
    SELECT SYSTIMESTAMP INTO S_TIMESTAMP FROM DUAL;
    
    S_TIMESTAMP := S_TIMESTAMP - NUMTODSINTERVAL(S_MINUTES, 'MINUTE');

    RESTORE_STUDENTS_BY_TIMESTAMP(S_TIMESTAMP);
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR OCCURED WHILE RESTORING STUDENTS TABLE BY MINUTES: ' || SQLERRM);
END;

CREATE OR REPLACE PROCEDURE ROLLBACK_STUDENTS_BY_SECONDS(
    S_SECONDS IN NUMBER
) AS
    S_TIMESTAMP TIMESTAMP;
BEGIN
    SELECT SYSTIMESTAMP INTO S_TIMESTAMP FROM DUAL;

    S_TIMESTAMP := S_TIMESTAMP - NUMTODSINTERVAL(S_SECONDS, 'SECOND');

    RESTORE_STUDENTS_BY_TIMESTAMP(S_TIMESTAMP);
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR OCCURED WHILE RESTORING STUDENTS TABLE BY SECONDS: ' || SQLERRM);
END;
